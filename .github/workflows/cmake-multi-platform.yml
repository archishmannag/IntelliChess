name: CMake on multiple platforms

on:
    push:
        branches: ["main"]
    pull_request:
        branches: ["main"]

jobs:
    build:
        runs-on: ${{ matrix.os }}

        strategy:
            fail-fast: false

            matrix:
                os: [ubuntu-latest, windows-latest]
                build_type: [Release]
                cpp_compiler: [g++, clang++, cl, x86_64-w64-mingw32-g++]
                include:
                    - os: windows-latest
                      cpp_compiler: cl
                    - os: windows-latest
                      cpp_compiler: x86_64-w64-mingw32-g++
                    - os: ubuntu-latest
                      cpp_compiler: g++
                    - os: ubuntu-latest
                      cpp_compiler: clang++
                exclude:
                    - os: windows-latest
                      cpp_compiler: g++
                    - os: windows-latest
                      cpp_compiler: clang++
                    - os: ubuntu-latest
                      cpp_compiler: cl
                    - os: ubuntu-latest
                      cpp_compiler: x86_64-w64-mingw32-g++

        steps:
            - uses: actions/checkout@v4

            - name: Install dependencies on Linux
              if: matrix.os == 'ubuntu-latest'
              run: |
                  sudo apt-get update
                  sudo apt-get install -y g++ cmake libsfml-dev

            - name: Install dependencies on Windows with MSVC
              if: matrix.os == 'windows-latest' && matrix.cpp_compiler == 'cl'
              run: |
                  choco install cmake --installargs 'ADD_CMAKE_TO_PATH=System' --version 3.20.0
                  choco install visualstudio2019buildtools --package-parameters "--add Microsoft.VisualStudio.Workload.VCTools --includeRecommended --includeOptional --passive --norestart"

            - name: Install dependencies on Windows with MinGW
              if: matrix.os == 'windows-latest' && matrix.cpp_compiler == 'x86_64-w64-mingw32-g++'
              run: |
                  choco install cmake --installargs 'ADD_CMAKE_TO_PATH=System' --version 3.20.0
                  curl -L -o mingw.7z https://github.com/brechtsanders/winlibs_mingw/releases/download/13.1.0-16.0.5-11.0.0-msvcrt-r5/winlibs-x86_64-posix-seh-gcc-13.1.0-mingw-w64msvcrt-11.0.0-r5.7z
                  7z x mingw.7z -oC:/mingw
                  echo "C:/mingw/bin" >> $GITHUB_PATH

            - name: Set reusable strings
              id: strings
              shell: bash
              run: |
                  echo "build-output-dir=${{ github.workspace }}/build" >> "$GITHUB_OUTPUT"

            - name: Configure CMake Windows
              if: matrix.os == 'windows-latest'
              run: |
                  cmake -B ${{ steps.strings.outputs.build-output-dir }} \
                  -DCMAKE_BUILD_TYPE=${{ matrix.build_type }} \
                  -S ${{ github.workspace }}

            - name: Configure CMake Linux
              if: matrix.os == 'ubuntu-latest'
              run: |
                  cmake -B ${{ steps.strings.outputs.build-output-dir }} \
                        -DCMAKE_CXX_COMPILER=${{ matrix.cpp_compiler }} \
                        -DCMAKE_BUILD_TYPE=${{ matrix.build_type }} \
                        -S ${{ github.workspace }}

            - name: Build
              run: cmake --build ${{ steps.strings.outputs.build-output-dir }} --config ${{ matrix.build_type }}

            - name: Test
              working-directory: ${{ steps.strings.outputs.build-output-dir }}
              run: ctest --build-config ${{ matrix.build_type }}
